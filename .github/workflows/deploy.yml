name: Deploy to Server

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies and build frontend
        run: |
          cd frontend
          npm install
          npm run build

      - name: Deploy to server (Prepare target directory)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Gehe in das ZIELVERZEICHNIS auf deinem Homeserver
            cd /var/www/vhosts/eppelstyle.de/html
            # Lösche alle alten Dateien im Verzeichnis, damit nur die neuen hochgeladen werden
            rm -rf *
            # Die anderen rm-Befehle, die vorher fehlschlugen, sollten jetzt nicht mehr auftreten,
            # da das Skript im richtigen Verzeichnis ist und dort die nötigen Rechte hat.

      - name: Copy build files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "frontend/dist/" # Kopiert den INHALT des dist-Ordners
          target: "/var/www/vhosts/eppelstyle.de/html" # Zielverzeichnis auf dem Server

      - name: Copy build files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "frontend/dist/"
          target: "/var/www/vhosts/eppelstyle.de/html"

      - name: Purge Cloudflare Cache
        if: success() # Dieser Schritt wird nur ausgeführt, wenn alle vorherigen Schritte erfolgreich waren
        uses: jakejarvis/cloudflare-purge-action@master
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE_ID }}
